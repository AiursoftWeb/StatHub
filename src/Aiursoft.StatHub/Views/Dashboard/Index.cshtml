@using Aiursoft.WebTools
@using Aiursoft.CSTools.Tools
@using Aiursoft.StatHub.SDK.Models
@model Aiursoft.StatHub.Models.DashboardViewModels.IndexViewModel
@{
    var showLast30 = ViewBag.Last30Seconds as bool? ?? false;
    var unit = showLast30 ? "/s" : string.Empty;
    var allHealthReports = Model.Agents.Select(a => a.GetHealthReport()).ToList();
    var totalAgents = allHealthReports.Count;
    var healthyAgents = allHealthReports.Count(h => h.Status == AgentStatus.Healthy);

    var alertAgents = allHealthReports.Count(h =>
        h.Status == AgentStatus.Warning ||
        h.Status == AgentStatus.Critical);

    var offlineAgents = allHealthReports.Count(h => h.Status == AgentStatus.Offline);

    var onlineReports = allHealthReports
        .Where(h => h.Status != AgentStatus.Offline)
        .ToList();

    var averageLoad = onlineReports.Any() ?
        onlineReports.Average(h => h.LoadRate) : 0;
}

<div class="container-fluid p-0">

    <div class="row mb-2 mb-xl-3">
        <div class="col-auto d-none d-sm-block">
            <h3>@Localizer["Agents Dashboard"]</h3>
        </div>

        <div class="col-auto ms-auto text-end mt-n1">
            <div class="btn-group" role="group" aria-label="Data View Toggle">
                @{
                    var cumulativeActive = showLast30 ? "" : "active";
                    var last30Active = showLast30 ? "active" : "";
                }
                <a class="btn btn-light bg-white shadow-sm @cumulativeActive" asp-controller="Dashboard" asp-action="Index" asp-route-Last30Seconds="false">
                    @Localizer["Cumulative"]
                </a>
                <a class="btn btn-light bg-white shadow-sm @last30Active" asp-controller="Dashboard" asp-action="Index" asp-route-Last30Seconds="true">
                    @Localizer["Last 30 seconds"]
                </a>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12 col-sm-6 col-xxl-3 d-flex">
            <div class="card flex-fill">
                <div class="card-body py-4">
                    <div class="d-flex align-items-start">
                        <div class="flex-grow-1">
                            <h3 class="mb-2">@totalAgents</h3>
                            <p class="mb-2">@Localizer["Total Agents"]</p>
                            <div class="mb-0">
                                <span class="badge badge-subtle-success me-2"> @healthyAgents @Localizer["Healthy"] </span>
                            </div>
                        </div>
                        <div class="d-inline-block ms-3">
                            <div class="stat">
                                <i class="align-middle text-success" data-lucide="server"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-xxl-3 d-flex">
            <div class="card flex-fill">
                <div class="card-body py-4">
                    <div class="d-flex align-items-start">
                        <div class="flex-grow-1">
                            <h3 class="mb-2">@alertAgents</h3>
                            <p class="mb-2">@Localizer["Agents with Alerts"]</p>
                            <div class="mb-0">
                                <span class="badge badge-subtle-danger me-2"> @Localizer["Critical or Warning"] </span>
                            </div>
                        </div>
                        <div class="d-inline-block ms-3">
                            <div class="stat">
                                <i class="align-middle text-danger" data-lucide="alert-triangle"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-xxl-3 d-flex">
            <div class="card flex-fill">
                <div class="card-body py-4">
                    <div class="d-flex align-items-start">
                        <div class="flex-grow-1">
                            <h3 class="mb-2">@offlineAgents</h3>
                            <p class="mb-2">@Localizer["Offline Agents"]</p>
                            <div class="mb-0">
                                <span class="badge badge-subtle-secondary me-2"> @Localizer["Out of sync"] </span>
                            </div>
                        </div>
                        <div class="d-inline-block ms-3">
                            <div class="stat">
                                <i class="align-middle text-muted" data-lucide="server-off"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-xxl-3 d-flex">
            <div class="card flex-fill">
                <div class="card-body py-4">
                    <div class="d-flex align-items-start">
                        <div class="flex-grow-1">
                            <h3 class="mb-2">@averageLoad.ToString("F0")%</h3>
                            <p class="mb-2">@Localizer["Average Load"]</p>
                            <div class="mb-0">
                                <span class="text-muted">@Localizer["(15m, Online Agents)"]</span>
                            </div>
                        </div>
                        <div class="d-inline-block ms-3">
                            <div class="stat">
                                <i class="align-middle text-info" data-lucide="bar-chart-2"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card flex-fill">
                <div class="card-header">
                    <h5 class="card-title mb-0">@Localizer["Agents Status Monitor"]</h5>
                </div>

                <div class="table-responsive">
                    <table class="table table-hover table-borderless my-0" id="logTable">
                        <thead>
                            <tr>
                                <th>@Localizer["IP"]</th>
                                <th>@Localizer["Name"]</th>
                                <th class="d-none d-lg-table-cell">@Localizer["SKU"]</th>
                                <th class="d-none d-xl-table-cell">@Localizer["Boot at"]</th>
                                <th>@Localizer["Avg Load"]</th>
                                <th>@Localizer["CPU Usage"]</th>
                                <th class="d-none d-lg-table-cell">@Localizer["Used at"]</th>
                                <th>@Localizer["RAM Usage"]</th>
                                @if (showLast30)
                                {
                                    <th class="d-none d-md-table-cell">@Localizer["Net Receiving"]</th>
                                    <th class="d-none d-md-table-cell">@Localizer["Net Sending"]</th>
                                    <th>@Localizer["Disk Used"]</th>
                                    <th class="d-none d-xl-table-cell">@Localizer["Disk Reading"]</th>
                                    <th class="d-none d-xl-table-cell">@Localizer["Disk Writing"]</th>
                                }
                                else
                                {
                                    <th class="d-none d-md-table-cell">@Localizer["Net Received"]</th>
                                    <th class="d-none d-md-table-cell">@Localizer["Net Sent"]</th>
                                    <th>@Localizer["Disk Used"]</th>
                                    <th class="d-none d-xl-table-cell">@Localizer["Disk Read"]</th>
                                    <th class="d-none d-xl-table-cell">@Localizer["Disk Written"]</th>
                                }
                                <th class="d-none d-xl-table-cell">@Localizer["OS"]</th>
                                <th>@Localizer["More"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var agent in Model.Agents)
                            {
                                var health = agent.GetHealthReport();
                                var mem = agent.GetMemUsed();
                                var net = showLast30 ? agent.GetNetworkLast30Seconds() : agent.GetNetwork();
                                var disk = showLast30 ? agent.GetDiskLast30Seconds() : agent.GetDisk();
                                var osFirstTwoWords = string.Join(" ", agent.OsName.Split(' ').Take(2)).Trim();
                                <tr>
                                    <td>
                                        <label data-bs-toggle="tooltip" data-placement="bottom" title="@health.Reason">
                                            <i class="align-middle me-2 @health.IconClass" data-lucide="@health.IndexIconDataLucide"></i>
                                            @agent.Ip
                                        </label>
                                    </td>
                                    <td>
                                        @agent.Hostname
                                        @if (!string.IsNullOrWhiteSpace(agent.Motd))
                                        {
                                            <i class="align-middle ms-1" data-lucide="mail" data-bs-toggle="tooltip" data-placement="bottom" title="@agent.Motd"></i>
                                        }
                                    </td>
                                    <td class="d-none d-lg-table-cell" data-sort="@agent.GetSkuInNumber()">@agent.GetSku()</td>
                                    <td class="d-none d-xl-table-cell" data-utc-time="@agent.BootTime.ToHtmlDateTime()" data-sort="@agent.BootTime.Ticks">
                                    </td>

                                    <td data-sort="@health.LoadRate">
                                        <div class="d-flex flex-column w-100">
                                            <span class="me-2 mb-1 text-muted">@health.LoadRate.ToString("F0")%</span>
                                            <div class="progress progress-sm w-100">
                                                <div class="progress-bar @health.LoadColorClass"
                                                     role="progressbar" style="width: @(health.LoadRate)%" aria-valuenow="@health.LoadRate" aria-valuemin="0" aria-valuemax="100" data-bs-toggle="tooltip" data-placement="bottom"
                                                     title="@health.LoadPrompt"></div>
                                            </div>
                                        </div>
                                    </td>

                                    <td data-sort="@health.CpuRate">
                                        <div class="d-flex flex-column w-100">
                                            <span class="me-2 mb-1 text-muted">@health.CpuRate.ToString("F0")%</span>
                                            <div class="progress progress-sm w-100">
                                                <div class="progress-bar @health.CpuColorClass"
                                                     role="progressbar" style="width: @(health.CpuRate)%" aria-valuenow="@health.CpuRate" aria-valuemin="0" aria-valuemax="100" data-bs-toggle="tooltip" data-placement="bottom"
                                                     title="@health.CpuPrompt"></div>
                                            </div>
                                        </div>
                                    </td>

                                    <td class="d-none d-lg-table-cell">
                                        @if (health.CpuRate < 30)
                                        {
                                            <span class="badge badge-subtle-secondary">@(agent.Process)</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-subtle-danger">@(agent.Process)</span>
                                        }
                                    </td>

                                    <td data-sort="@mem.UsedRate">
                                        <div class="progress progress-sm">
                                            <div class="progress-bar-striped bg-success" role="progressbar" style="width: @(mem.UsedRate)%" aria-valuenow="@(mem.UsedRate)" aria-valuemin="0" aria-valuemax="100" data-bs-toggle="tooltip" data-placement="bottom" title="Used RAM: @mem.Used.HumanReadableSize()"></div>
                                            <div class="progress-bar-striped bg-info" role="progressbar" style="width: @(mem.BufRate)%" aria-valuenow="@(mem.BufRate)" aria-valuemin="0" aria-valuemax="100" data-bs-toggle="tooltip" data-placement="bottom" title="Buffer RAM: @mem.Buf.HumanReadableSize()"></div>
                                            <div class="progress-bar-striped bg-warning" role="progressbar" style="width: @(mem.CacheRate)%" aria-valuenow="@(mem.CacheRate)" aria-valuemin="0" aria-valuemax="100" data-bs-toggle="tooltip" data-placement="bottom" title="Cache RAM: @mem.Cache.HumanReadableSize()"></div>
                                        </div>
                                    </td>

                                    <td class="d-none d-md-table-cell" data-sort="@net.Recv">
                                        @net.Recv.HumanReadableSize()@unit
                                    </td>
                                    <td class="d-none d-md-table-cell" data-sort="@net.Send">
                                        @net.Send.HumanReadableSize()@unit
                                    </td>

                                    <td data-sort="@health.DiskUseRatio">
                                        <div class="d-flex flex-column w-100">
                                            <span class="me-2 mb-1 text-muted">@(Math.Round(health.DiskUseRatio * 100))%</span>
                                            <div class="progress progress-sm w-100">
                                                <div class="progress-bar @health.DiskColorClass" role="progressbar" style="width: @(health.DiskUseRatio * 100)%" aria-valuenow="@(health.DiskUseRatio * 100)" aria-valuemin="0" aria-valuemax="100" data-bs-toggle="tooltip" data-placement="bottom" title="@health.DiskPrompt"></div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="d-none d-xl-table-cell" data-sort="@disk.Read">
                                        @disk.Read.HumanReadableSize()@unit
                                    </td>
                                    <td class="d-none d-xl-table-cell" data-sort="@disk.Writ">
                                        @disk.Writ.HumanReadableSize()@unit
                                    </td>

                                    <td class="d-none d-xl-table-cell">@osFirstTwoWords</td>

                                    <td>
                                        <a class="btn btn-light btn-sm" asp-controller="Dashboard" asp-action="Details" asp-route-id="@agent.ClientId">
                                            @Localizer["Details"]
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@* ReSharper disable once Razor.SectionNotResolved *@
@section scripts {
    <script>
		document.addEventListener("DOMContentLoaded", function() {
			// Datatables Responsive
            // ("#datatables-reponsive")
			$('#logTable').DataTable({
                "responsive": true,
                "paging": true,
                "pageLength": 25,
                "searching": false,
                "info": false,
                "order": [[0, "asc"]],
                "drawCallback": function () {
                    $('[data-toggle="tooltip"]').tooltip({
                        trigger: 'hover'
                    });
                }
			});

            // Activate tooltip tool
            $('[data-toggle="tooltip"]').tooltip({
                trigger: 'hover'
            });
		});
	</script>
}

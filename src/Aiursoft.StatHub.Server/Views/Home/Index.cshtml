@using Aiursoft.WebTools
@using Aiursoft.CSTools.Tools
@model Aiursoft.StatHub.SDK.Models.Client[]

<div class="jumbotron">
    <div class="container">
        <h1 class="display-4">Welcome, Admin!</h1>
        <p class="lead">Here you can manage your clients and view your clients' status.</p>
    </div>
</div>
<div class="container-fluid">
    <div class="row no-gutters">
        <div class="col-md-12 mt-3 mb-3">
            <div class="card mb-2">
                <div class="card-body">
                    <h5 class="card-title">Client status</h5>
                    <div class="table-responsive">
                        <table class="table table-hover table-sm datatable" id="logTable">
                            <thead>
                                <tr>
                                    <th>IP</th>
                                    <th>Name</th>
                                    <th>SKU</th>
                                    <th>Boot at</th>
                                    <th>Avg Load</th>
                                    <th>CPU Usage</th>
                                    <th>Used at</th>
                                    <th>RAM Usage</th>
                                    <th>Net Received</th>
                                    <th>Net Sent</th>
                                    <th>Disk Used</th>
                                    <th>Disk Read</th>
                                    <th>Disk Written</th>
                                    <th>OS</th>
                                    @* <th>Last Update</th> *@
                                    @* <th>Version</th> *@
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var client in Model)
                                {
                                    <tr>
                                        <td>
                                            @{
                                                // Identify
                                                var isOutDated = client.LastUpdate < DateTime.UtcNow.AddMinutes(-1);
                                                
                                                // Load
                                                var load = client.GetLoad();
                                                var loadRate = load.Load15M * 30; // Usually Load < 3.33 is safe.
                                                var colorLoad = 
                                                    loadRate < 10 ? "bg-success":
                                                    loadRate < 15 ? "bg-info":
                                                    loadRate < 30 ? "bg-secondary":
                                                    loadRate < 60 ? "bg-warning":
                                                    "bg-danger";
                                                var promptTextLoad = $"Load:\n1 min: {load.Load1M}\n5 min: {load.Load5M}\n15 min: {load.Load15M}";

                                                // CPU
                                                var cpu = client.GetCpuUsage();
                                                var cpuRate = cpu.Ratio;
                                                var promptText = $"CPU Usage:\nUser: {cpu.Usr}%\nSystem: {cpu.Sys}%\nIdle: {cpu.Idl}%\nWait: {cpu.Wai}%\nSteal: {cpu.Stl}%";
                                                var color = 
                                                    cpuRate < 5 ? "bg-success":
                                                    cpuRate < 10 ? "bg-info":
                                                    cpuRate < 20 ? "bg-secondary":
                                                    cpuRate < 40 ? "bg-warning":
                                                    "bg-danger";
                                                
                                                // RAM
                                                var mem = client.GetMemUsed();
                                                
                                                // NetWork
                                                var net = client.GetNetwork();

                                                // Disk
                                                var disk = client.GetDisk();
                                                var diskUseRatio = client.UsedRoot / (double)client.TotalRoot;
                                                var message = $"{client.UsedRoot}GB / {client.TotalRoot}GB";
                                                var diskColor = 
                                                    diskUseRatio < 0.6 ? "bg-success":
                                                    diskUseRatio < 0.7 ? "bg-warning":
                                                    "bg-danger";
                                                
                                                // OS
                                                var osFirstTwoWords = string.Join(" ", client.OsName.Split(' ').Take(2)).Trim();
                                                
                                                // Overall
                                                var reason = isOutDated ? "Server is out of sync. " : "";
                                                reason += loadRate > 60 ? "Load critical. " : loadRate > 30 ? "Load warning. " : "";
                                                reason += cpuRate > 40 ? "CPU usage critical. " : cpuRate > 20 ? "CPU usage warning. " : "";
                                                reason += diskUseRatio > 0.7 ? "Disk space critical. " : diskUseRatio > 0.6 ? "Disk space warning. " : "";
                                            }
                                            @if (isOutDated || loadRate > 60 || cpuRate > 40 || diskUseRatio > 0.7)
                                            {
                                                <div class="dot dot-danger" data-toggle="tooltip" data-placement="bottom" title="@reason"></div>
                                            }
                                            else if (loadRate > 30 || cpuRate > 20 || diskUseRatio > 0.6)
                                            {
                                                <div class="dot dot-warning" data-toggle="tooltip" data-placement="bottom" title="@reason"></div>
                                            }
                                            else
                                            {
                                                <div class="dot dot-success"></div>
                                            }
                                            @client.Ip
                                        </td>
                                        <td data-toggle="tooltip" data-placement="bottom" title="@client.Motd">@client.Hostname</td>
                                        <td data-sort="@client.GetSkuInNumber()">@client.GetSku()</td>
                                        <td data-utc-time="@client.BootTime.ToHtmlDateTime()" data-sort="@client.BootTime.Ticks">
                                        </td>
                                        
                                        @* Load *@
                                        <td data-sort="@loadRate">
                                            <div class="progress">
                                                <div class="progress-bar-striped progress-bar-animated @colorLoad" 
                                                     role="progressbar" style="width: @(loadRate)%" aria-valuenow="loadRate" aria-valuemin="0" aria-valuemax="100" data-toggle="tooltip" data-placement="bottom" 
                                                     title="@promptTextLoad"></div>
                                            </div>
                                        </td>
                                        
                                        @* CPU *@
                                        <td data-sort="@cpuRate">
                                            <div class="progress">
                                                <div class="progress-bar-striped progress-bar-animated @color" 
                                                     role="progressbar" style="width: @(cpuRate)%" aria-valuenow="@cpuRate" aria-valuemin="0" aria-valuemax="100" data-toggle="tooltip" data-placement="bottom" 
                                                     title="@promptText"></div>
                                            </div>
                                        </td>
                                        <td>
                                            @if (cpuRate < 30)
                                            {
                                                <span class="badge badge-secondary">@(client.Process)</span>
                                            }
                                            else
                                            {
                                                <span class="badge badge-danger">@(client.Process)</span>
                                            }
                                        </td>
                                        
                                        @* RAM *@
                                        <td data-sort="@mem.UsedRate">
                                            <div class="progress">
                                                <div class="progress-bar-striped bg-success" role="progressbar" style="width: @(mem.UsedRate)%" aria-valuenow="@(mem.UsedRate)" aria-valuemin="0" aria-valuemax="100" data-toggle="tooltip" data-placement="bottom" title="Used RAM: @mem.Used.HumanReadableSize()"></div>
                                                <div class="progress-bar-striped bg-info" role="progressbar" style="width: @(mem.BufRate)%" aria-valuenow="@(mem.BufRate)" aria-valuemin="0" aria-valuemax="100" data-toggle="tooltip" data-placement="bottom" title="Buffer RAM: @mem.Buf.HumanReadableSize()"></div>
                                                <div class="progress-bar-striped bg-warning" role="progressbar" style="width: @(mem.CacheRate)%" aria-valuenow="@(mem.CacheRate)" aria-valuemin="0" aria-valuemax="100" data-toggle="tooltip" data-placement="bottom" title="Cache RAM: @mem.Cache.HumanReadableSize()"></div>
                                            </div>
                                        </td>
                                        
                                        @* NetWork *@
                                        <td data-sort="@net.Recv">
                                            @net.Recv.HumanReadableSize()
                                        </td>
                                        <td data-sort="@net.Send">
                                            @net.Send.HumanReadableSize()
                                        </td>
                                        
                                        <td data-sort="@diskUseRatio">
                                            <div class="progress">
                                                <div class="progress-bar @diskColor" role="progressbar" style="width: @(diskUseRatio * 100)%" aria-valuenow="@(diskUseRatio * 100)" aria-valuemin="0" aria-valuemax="100" data-toggle="tooltip" data-placement="bottom" title="@message">@(client.UsedRoot)GB</div>
                                            </div>
                                        <td data-sort="@disk.Read">
                                            @disk.Read.HumanReadableSize()
                                        </td>
                                        <td data-sort="@disk.Writ">
                                            @disk.Writ.HumanReadableSize()
                                        </td>
                                        
                                        <td>@osFirstTwoWords</td>
                                        @* <td data-utc-time="@client.LastUpdate.ToHtmlDateTime()" data-sort="@client.LastUpdate.Ticks"> *@
                                        @* </td> *@
                                        @* <td>@client.Version</td> *@
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
